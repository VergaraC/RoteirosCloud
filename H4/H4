1) O Conceito por trás de Edge Computing, é de trazer o processamento e análise dos dados próximo ao seu ponto de coleta, para ser mais rápido e depender menos de Data Centers ou serviços parecidos de terceiros. Ainda mais nos dias de hoje, onde utilizamos sistemas mais complexos e avançados para tarefas mundanas e críticas, sendo assim necessário uma alta velocidade no tratamento de dados.

2) Escolheria Private Cloud, visto que assim teria uma maior segurança e confiança no sistema crítico, visto que teria uma menor chance de falhas já que o hardware seria para a empresa e não compartilhado, além disso como os serviços seriam dedicado apenas a empresa eles seriam mais ágeis. Além disso, por se tratar de uma empresa grande, é de se esperar que haja um alto uso desse sistema cŕitico, assim a private cloud pode sair mais barata que o public.

3) O time de DevOps é um time que integra as áreas de desenvolvimento e operações com foco em eficiência e agilidade, sempre iterando os seus produtos para terem um melhor fit com o seu usuário, no caso de uma empresa um time de DevOps pode ser utilizado para fornecer serviços e produtos para os programadores da área de desenvolvimento, criando sistemas de teste, deploy ou outros a fim de facilitar o trabalho dos programadores aumentando a eficiência do desenvolvimento aumentando a velocidade de desenvolvimento de uma empresa. E para a parte de operações o time pode facilitar o entendimento do cliente e monitoramento de seus produtos e serviços, facilitar testes de produtos e serviços antes de serem enviados para produção, assim agilizando o sistema de melhoras e de criação de produtos.

4) O SLA (Service Level Agreement) é o acordo que é feito entre o provedor de serviço e o cliente, onde é especificado o custo, tempo de uso, limite de uso, o plano de DR (Disaster Recovery), tempo máximo que o serviço pode não funcionar sem haver multas, sendo que o resto do tempo ele deve estar em HA (Uptime).
Para o HA, é necessário ter alta disponibilidade de servidores, que pode ser feito utilizando load balencers e instâncias com auto scalling, caso os serviços necessitem de banco de dados usaria bancos com redundância.
Para o DR, ustilizaria um sistema de banco de dados com redundância, também utilizaria um sistema de backup dos dados do banco rotineramente e oferecer o serviço em outras nuvens ou outras regiões para que caso uma nuvem  ou região tenha problema o serviço poderá continuar no ar.
